apiVersion: v1
kind: PersistentVolumeClaim
metadata:
   : my-web-vol1
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
stringData:
  username: user
  aws_access_key_id: "abcd"
  aws_secret_access_key: "lkjh"
data:
  message: aGVsbG8gc2VjcmV0
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: create-websecure
spec:
  workspaces:
    - name: repo_volume
      persistentVolumeClaim:
        claimName: my-web-vol1
    - name: secret_ws
      secret:
        secretName: my-secret 
  taskSpec:
    steps:
    - name: clone
      image: alpine/git #'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.15.2'
      env:
      - name: CHECKOUT_DIR
        value: "amazon-cloudfront-secure-static-site"
      script: |
        #!/usr/bin/env sh
        set -eu
        cat /etc/resolv.conf
        cd $(workspaces.repo_volume.path)
        if [ -d "${CHECKOUT_DIR}" ] ; then
            # Delete non-hidden files and directories
            rm -rf "${CHECKOUT_DIR:?}"/*
            # Delete files and directories starting with . but excluding ..
            rm -rf "${CHECKOUT_DIR}"/.[!.]*
            # Delete files and directories starting with .. plus any other character
            rm -rf "${CHECKOUT_DIR}"/..?*
        fi
        git clone https://github.com/aws-samples/amazon-cloudfront-secure-static-site.git

    - name: initiate-repo
      image: docker.io/hashicorp/terraform:light #0.13.6
      workingDir: $(workspaces.repo_volume.path)/provision-aws-eks
      #args:
      #- "init" -backend-config= "mybackend-tfstate " -backend-config= "key=red30/ecommerceapp/app.state " -backend-config="region=us-east-1 " "
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        terraform init -upgrade -backend-config="bucket=mybackend-tfstate" -backend-config="key=app4.state" -backend-config="region=us-east-1"

    #step Plan
    - name: plan-cluster
      image: docker.io/hashicorp/terraform:light
      workingDir: $(workspaces.repo_volume.path)/provision-aws-eks
      #args:
      #- "plan"
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        echo $aws_access_key_id
        echo $aws_secret_access_key
        terraform plan -var cluster_name="myclustTT" -var cluster_version="1.21"
    
    - name: create-cluster
      image: docker.io/hashicorp/terraform:light
      workingDir: $(workspaces.repo_volume.path)/provision-aws-eks
      args:
      - "plan"
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        export AWS_DEFAULT_REGION="us-east-1"
        terraform apply --auto-approve -var cluster_name="myclustTT" -var cluster_version="1.21"

    - name: apply-managed-service
      image: docker.io/hashicorp/terraform:light
      workingDir: $(workspaces.repo_volume.path)/provision-aws-eks
      args:
      - "plan"
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        export AWS_DEFAULT_REGION="us-east-1"

    - name: update-cmdb
      image: docker.io/hashicorp/terraform:light
      workingDir: $(workspaces.repo_volume.path)/provision-aws-eks
      args:
      - "plan"
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        export AWS_DEFAULT_REGION="us-east-1"

    workspaces:
    - name: repo_volume
      mountPath: /data
    - name: secret_ws
      mountPath: /my/secret/volume