apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-pvc
spec:
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  message: hello world
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
stringData:
  username: user
  aws_access_key_id: "<AccessKeyID>"
  aws_secret_access_key: "<SecretAccessKeyID>"
data:
  message: aGVsbG8gc2VjcmV0
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  generateName: custom-volume-
spec:
  workspaces:
    - name: repovol
      persistentVolumeClaim:
        claimName: my-pvc
    - name: secret_ws
      secret:
        secretName: my-secret 
  taskSpec:
    steps:
    - name: clone
      image: alpine/git #'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.15.2'
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - "ALL"
        # User 65532 is the nonroot user ID
        # runAsNonRoot: true
      env:
      - name: CHECKOUT_DIR
        value: "amazon-cloudfront-secure-static-site"
      script: |
        #!/usr/bin/env sh
        set -eu
        cd $(workspaces.repovol.path)
        if [ -d "${CHECKOUT_DIR}" ] ; then
            # Delete non-hidden files and directories
            rm -rf "${CHECKOUT_DIR:?}"/*
            # Delete files and directories starting with . but excluding ..
            rm -rf "${CHECKOUT_DIR}"/.[!.]*
            # Delete files and directories starting with .. plus any other character
            rm -rf "${CHECKOUT_DIR}"/..?*
        fi
        git clone https://github.com/aws-samples/amazon-cloudfront-secure-static-site.git

    - name: npm-make
      image: node
      workingDir: $(workspaces.repovol.path)/amazon-cloudfront-secure-static-site
      script: |
        #!/bin/sh
        set -xe
        apt-get update
        apt-get install -y zip
        make package-static

    - name: codetos3
      image: amazon/aws-cli
      workingDir: $(workspaces.repovol.path)/amazon-cloudfront-secure-static-site
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        #aws s3 mb s3://trainingusbatch

    - name: cloudinit
      image: amazon/aws-cli
      workingDir: $(workspaces.repovol.path)/amazon-cloudfront-secure-static-site
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        ls
        aws --region us-east-1 cloudformation package --template-file templates/main.yaml --s3-bucket trainingusbatch --output-template-file packaged.template
        
    - name: clouddeploy
      image: amazon/aws-cli
      workingDir: $(workspaces.repovol.path)/amazon-cloudfront-secure-static-site
      script: |
        #!/bin/sh
        set -xe
        export AWS_ACCESS_KEY_ID=`cat $(workspaces.secret_ws.path)/aws_access_key_id`
        export AWS_SECRET_ACCESS_KEY=`cat $(workspaces.secret_ws.path)/aws_secret_access_key`
        ls
        aws --region us-east-1 cloudformation deploy --stack-name securewebsitecf --template-file packaged.template --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --parameter-overrides  DomainName=synectiks.net SubDomain=mysite HostedZoneId=<addHostedZoneID>
    workspaces:
    - name: repovol
    - name: secret_ws
